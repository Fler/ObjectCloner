version: '2.1.7.{build}'
image: Visual Studio 2017
branches:
  only:
  - master
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '2.1.7'
  package_version: '2.1.7'
  assembly_version: '2.1.7'
  file_version: '{version}'
  informational_version: '{version}'
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
install:
  # Install repo specific stuff here
before_build:
  # Install OpenCover and CodeCov integration
  - cmd: choco install codecov

  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore --verbosity m
build_script:
  # output will be in ./src/bin/debug/netcoreapp1.1/publish
  - cmd: dotnet publish -c Release
after_build:
  # For once the build has completed
artifacts:
 - path: '\src\ObjectCloner\bin\Release\netstandard2.0\publish'
   name: library
clone_depth: 1
test_script:
  # Run the unit tests first without coverage so it fails the build if needed
  - cmd: dotnet test -c Release --no-build
  # Run code coverage
  - cmd: >
     "packages/opencover/4.7.922/tools/OpenCover.Console.exe" -register:user -target:"dotnet.exe" -targetargs:"test -c Release" -output:"./coverage.xml" -oldstyle -filter:"+[ObjectCloner*]* -[ObjectCloner.Test*]*"
  - cmd: codecov -f "coverage.xml"
  - cmd: rm "coverage.xml"
on_finish :
  # any cleanup in here
deploy: off